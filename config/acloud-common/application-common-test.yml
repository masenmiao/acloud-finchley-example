spring:
  datasource:
    druid:
      #公共配置
      driver-class-name: com.mysql.jdbc.Driver
      initialize: true
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-idle: 10
      maxActive: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis:  60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery:  SELECT 1 FROM DUAL
      testWhileIdle:  true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize:  20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      #filters:  stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=2000
      web-stat-filter:
      #是否启用StatFilter默认值true
        enabled: false
      stat-view-servlet:
      #是否启用StatViewServlet默认值true
        enabled: false
    #其中一个数据源，可以配置多个，对应多个config配置类
      base:
        url: jdbc:mysql://172.25.2.142:3306/moni?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull
        username: root
        password: 123456
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  rocketmq:
    nameServer: 127.0.0.1:9876

  redis:
    host: 172.25.34.140
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接池最大连接数（使用负值表示没有限制）
    pool.max-active: 8
    # 连接池最大阻塞等待时间（使用负值表示没有限制）
    #pool.max-wait: -1
    # 连接池中的最大空闲连接
    pool.max-idle: 8
    # 连接池中的最小空闲连接
    pool.min-idle: 0
    timeout: 5000
  data:
    mongodb:
      uri: mongodb://10.101.25.179:27017/cmdb
my:
  message: hello world cloud application